name: ‚ñ∂Ô∏è CI

on:
  push:
    branches:
      - 'hotfix/**'
      - 'release/**'
      - 'main'
  pull_request:
  workflow_dispatch:
    inputs:
      tag:
        description: Which tag to deploy
        required: true
        type: string
      skipTests:
        description: Skip tests (Use with cautions)
        type: boolean
        required: false
        default: false
  release:
    types: [published]

jobs:
  env:
    runs-on: ubuntu-18.04
    outputs:
      ref: ${{ steps.vars.outputs.ref }}
      environment: ${{ steps.vars.outputs.environment }}
      release_version: ${{ steps.vars.outputs.release_version }}
    steps:
      - name: Set variables
        id: vars
        run: |
          echo ${{ github.event.inputs.tag }}
          REF=${{ github.ref }}
          TAG=${{ github.event.release.tag_name || github.event.inputs.tag }}
          if test $TAG; then REF="refs/tags/$TAG"; fi
          ENVIRONMENT="develop"
          [[ $REF == refs/heads/release/* ]] && ENVIRONMENT="staging"
          [[ $REF == refs/tags/* ]] && ENVIRONMENT="production"
          RELEASE_VERSION=${{ github.sha }}
          if [[ $REF == refs/tags/* ]]; then
            REG='refs/tags/(.*)'
            [[ $REF =~ $REG ]]
            RELEASE_VERSION=${BASH_REMATCH[1]}
          elif [[ $REF == refs/heads/release/* ]]; then
            REG='refs/heads/release/(.*)'
            [[ $REF =~ $REG ]]
            RELEASE_VERSION=${BASH_REMATCH[1]}-staging
          fi
          echo "::set-output name=ref::${REF}"
          echo "::set-output name=environment::${ENVIRONMENT}"
          echo "::set-output name=release_version::${RELEASE_VERSION}"
  test:
    runs-on: ubuntu-18.04
    if: ${{ always() }}
    needs: [env]
    env:
      SKIP_TESTS: ${{ github.event.inputs.skipTests }}
    steps:
      - run: |
          echo ${{ needs.env.outputs.ref }}
          echo ${{ needs.env.outputs.environment }}
          echo ${{ needs.env.outputs.release_version }}
          echo ${{ github.events.inputs.skipTests }}
          echo $SKIP_TESTS
          echo ${{ needs.env.result }}
  zeffo-test:
    needs: [env]
    uses: ./.github/workflows/zeffoTest.yml
    with:
      ref: ${{ needs.env.outputs.ref }}
      skipTests: ${{ github.event.inputs.skipTests == 'true' }}
  embed-test:
    needs: [env]
    uses: ./.github/workflows/embedTest.yml
    with:
      ref: ${{ needs.env.outputs.ref }}
      environment: ${{ needs.env.outputs.environment }}
      skipTests: ${{ github.event.inputs.skipTests == 'true' }}
  zeffo-deploy:
    needs: [env, zeffo-test]
    if: ${{ needs.env.outputs.environment != 'develop' }}
    uses: ./.github/workflows/zeffoDeploy.yml
    with:
      ref: ${{ needs.env.outputs.ref }}
      environment: ${{ needs.env.outputs.environment }}
      release_version: ${{  needs.env.outputs.release_version }}
  embed-build:
    needs: [env]
    if: ${{ needs.env.outputs.environment != 'develop' }}
    uses: ./.github/workflows/embedBuild.yml
    with:
      ref: ${{ needs.env.outputs.ref }}
      environment: ${{ needs.env.outputs.environment }}
      release_version: ${{  needs.env.outputs.release_version }}
  embed-deploy:
    needs: [env, embed-test, embed-build]
    if: ${{ needs.env.outputs.environment != 'develop' }}
    uses: ./.github/workflows/embedDeploy.yml
    with:
      ref: ${{ needs.env.outputs.ref }}
      environment: ${{ needs.env.outputs.environment }}
      release_version: ${{  needs.env.outputs.release_version }}
  test-status:
    needs: [env, embed-test]
    if: ${{ always() }}
    runs-on: ubuntu-18.04
    steps:
      - run: |
          echo ${{ needs.embed-test.result }}
  chromatic:
    runs-on: ubuntu-18.04
    needs: [env]
    if: ${{ needs.env.outputs.environment != 'production' }}
    steps:
      - run: |
          echo ${{ github.event.pull_request }}
          echo "run chromatic"
  # notify:
  #   needs: [env, zeffo-deploy, embed-deploy]
  #   if: ${{ needs.env.outputs.environment == 'production' }}
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Post to a Slack channel
  #       id: slack
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.ZEFFO_SLACK_NOTIFIER_WEBHOOK }}
  #         SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  #       uses: slackapi/slack-github-action@v1.16.0
  #       with:
  #         payload: |
  #           {
  #             "blocks": [
  #               {
  #                 "type": "header",
  #                 "text": {
  #                   "type": "plain_text",
  #                   "text": "[${{ needs.env.outputs.release_version }}] üöÄ Release launched ü§©"
  #                 }
  #               },
  #               {
  #                 "type": "section",
  #                 "text": {
  #                   "type": "mrkdwn",
  #                   "text": "Great job! Please monitor the release for the next hour."
  #                 }
  #               }
  #             ]
  #           }
